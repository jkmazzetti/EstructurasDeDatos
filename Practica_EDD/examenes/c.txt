1-Escribir un programa en python que dado el siguiente archivo .csv (con valores separados por coma) con resultados de la liga española de fútbol, genere un archivo en formato json, con nombre posiciones.json,  con el siguiente formato: {"posiciones": {"equipo1": {"puntos": ptos_totales, "goles a favor": total_goles_a_favor, "goles_en_contra": total_goles_en_contra}, "equipo2": {"puntos": ptos_totales, "goles a favor": total_goles_a_favor, "goles_en_contra": total_goles_en_contra}, .....}}. Donde para calcular los puntos por cada partido ganado se otorgan tres puntos, al ganador,  y por cada empate un punto a cada equipo. Subir archivo .zip con la solución completa
https://drive.google.com/file/d/1V7KTdaQhV_j2TKdHGwg5-H3gkoOuHmFt/view?usp=sharing

2-Dado el siguiente archivo con datos geográficos, escribir las siguientes expresiones XPath que devuelvan. 1) Todos los países que tienen como moneda al euro. 2) Los nombres de los ríos europeos (ríos que atraviesan países en el continente europeo) 3) Superficie de los países por donde pasa el rio Uruguay
https://drive.google.com/file/d/1mPlD_8iZKXzH8vdBXara0a44N5qkOp5z/view?usp=sharing

3-Describir la técnica BlockStorage para comprimir un diccionario de términos. (a) Aplicarlos al caso. Tamaño del bloque = 7, contenidos = [pateada, pateador, pateadura, patear, patena, patentado, patentar, patente, patentizar, pateo, patera, paterfamilias, paternal, paternalismo, paternalista, paternalmente, paternidad]. (b) Si la palabra patear aparece en los documentos 100021, 100039, 100139 y 100159, comprimir su lista de apariciones.

4-Escribir las siguientes expresiones regulares. 1) El encabezado de un correo electrónico se tiene la forma "From: gnat@perl.com\nTo: camelot@oreilly.com". Aceptar sólo mensajes que son autoenviados (remitente = receptor) El mensaje puede tener más de un receptor, separados por punto y coma. Por ejemplo el siguiente se considera autoenviado: From: me@untref.edu.ar\nTo: profesor@untref.edu.ar ; me@untref.edu.ar".2) Que acepte password que tengan una longitud mínima de 8 caracteres y que incluyan al menos una letra mayúscula, una letra minúscula, un caracter especial (?^!-_#$@%&) y no tenga espacios intermedios. Ejemplo de passwords válidas: Pass#word, P#$@%&ass, miPassWord**.




2-1 //pais[moneda="euro"]/@nombre
2-2 //rio[pais=//continente[@nombre="Europa"]/pais]/nombre
2-3 //pais[@nombre=//rio[nombre="Uruguay"]/pais]/superficie


3-
Se escribe todo en el mismo string pero por cuestiones de comodidad se va realizar en lineas distintas.
*=puntero al primer termino de cada bloque

7pateada8pateador9pateadura6patear6patena9patentado8patentar
*

7patente10patentizar5pateo6patera13paterfamilias8paternal12paternalismo
*

12paternalista13paternalmente10paternidad
*

BlockStrorage lo que hace es comprimir los terminos en bloques de k cantidad de palabras, solo
hace referencia a la primera palabra de cada bloque y en el incio de cada palabra escribe el numero de
caracteres que se tiene que leer de izquierda a derecha para recuperar la palabra que se está procesando en 
ese momento.

Si la palabra patear aparece en los documentos 100021, 100039, 100139 y 100159, comprimir su lista de apariciones.

Patear= 100021, 18, 100, 20
	100021,       100039,    100139        100159
	igual=100021  salto=18   salto= 100    salto= 20


100021=00000110 00001101 00110101
18=10010010
100=11100100
20=10010100
